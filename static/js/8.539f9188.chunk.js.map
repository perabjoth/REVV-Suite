{"version":3,"sources":["components/Transactions.js","api/revvTransactions.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","field","title","type","filterPlaceholder","render","rowData","value","Transactions","getTransactions","e","a","preventDefault","validAddress","web3","utils","isAddress","state","walletAddress","setState","validationDone","addressStamp","Date","getDate","toString","localStorage","getItem","setData","JSON","parse","setDataLoaded","setIsLoading","revvTransactions","get","then","response","txns","data","result","filterData","formatData","catch","console","error","isLoading","dataLoaded","this","filter","txn","tokenSymbol","from","map","id","hash","timeStamp","parseFloat","fromWei","toFixed","container","spacing","item","xs","style","display","alignItems","flexDirection","background","color","component","variant","onSubmit","noValidate","mt","margin","required","fullWidth","label","name","autoFocus","onChange","setWalletAddress","target","marginTop","height","width","flexGrow","theme","icons","options","pageSize","pageSizeOptions","parseInt","length","filtering","search","Component","axios","create","baseURL"],"mappings":"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","file":"static/js/8.539f9188.chunk.js","sourcesContent":["import React, { Component, forwardRef } from 'react'\r\nimport web3 from 'web3';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport revvTransactions from '../api/revvTransactions';\r\nimport MaterialTable from '@material-table/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport theme from './theme';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst columns = [\r\n    { field: 'timeStamp', title: 'Date', type: 'date', filterPlaceholder: 'Filter Date' },\r\n    { field: 'value', title: 'Reward', filterPlaceholder: 'Filter Reward',render: rowData =>{return rowData.value +\" REVV\"} },\r\n]\r\n\r\n\r\nexport default class Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            walletAddress: \"\",\r\n            validAddress: true,\r\n            validationDone: false,\r\n            isLoading: false,\r\n            dataLoaded: false,\r\n            data: []\r\n        }\r\n    }\r\n\r\n\r\n    setIsLoading(value) {\r\n        this.setState({ isLoading: value })\r\n    }\r\n\r\n    setDataLoaded(value) {\r\n        this.setState({\r\n            dataLoaded: value\r\n        });\r\n    }\r\n\r\n    setData(data) {\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    setWalletAddress(walletAddress) {\r\n        this.setState({\r\n            walletAddress: walletAddress,\r\n            validationDone: false,\r\n            dataLoaded: false\r\n        });\r\n    }\r\n\r\n    getTransactions = async (e) => {\r\n        e.preventDefault();\r\n        let validAddress = web3.utils.isAddress(this.state.walletAddress)\r\n\r\n        this.setState({\r\n            validAddress: validAddress,\r\n            validationDone: true\r\n        });\r\n\r\n\r\n        if (validAddress) {\r\n            let addressStamp = this.state.walletAddress + new Date().getDate().toString()\r\n            if (localStorage.getItem(addressStamp)) {\r\n                this.setData(JSON.parse(localStorage.getItem(addressStamp)));\r\n                this.setDataLoaded(true);\r\n            } else {\r\n                this.setIsLoading(true);\r\n                await revvTransactions\r\n                    .get(`&address=${this.state.walletAddress}`)\r\n                    .then((response) => {\r\n                        let txns = response.data.result\r\n                        txns = this.filterData(txns);\r\n                        txns = this.formatData(txns);\r\n                        this.setData(txns);\r\n                        this.setDataLoaded(true);\r\n                        this.setIsLoading(false);\r\n                    }).catch((e) => {\r\n                        console.error(e);\r\n                        this.setIsLoading(false);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    filterData(txns) {\r\n        txns = txns.filter((txn) => {\r\n            return txn.tokenSymbol === \"REVV\" && txn.from === \"0x9c8a06f0197ee718cd820adeb48a88ea2a9b5c48\";\r\n        });\r\n        return txns;\r\n    }\r\n\r\n    formatData(txns) {\r\n        txns = txns.map((txn) => {\r\n            txn.id = txn.hash\r\n            txn.timeStamp = new Date(txn.timeStamp * 1000)\r\n            txn.value = parseFloat(web3.utils.fromWei(txn.value)).toFixed(2)\r\n            return txn;\r\n        })\r\n\r\n        return txns;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} style={{ display: \"flex\", alignItems: 'center', flexDirection: 'column', }}>\r\n                    <Avatar style={{ background: 'red', color: 'white' }}>\r\n                        <AccountBalanceWalletIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Distributed REVV Rewards\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} component=\"form\" onSubmit={(e) => { this.getTransactions(e) }} noValidate style={{ mt: 3 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        color=\"primary\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"wallet\"\r\n                        label=\"Wallet Address\"\r\n                        name=\"wallet\"\r\n                        autoFocus\r\n                        variant=\"outlined\"\r\n                        error={!this.state.validAddress}\r\n                        onChange={(e) => this.setWalletAddress(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    {!this.state.isLoading && <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\" \r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                    >\r\n                        Get Rewards List\r\n                    </Button>}\r\n                    {this.state.isLoading && <LinearProgress />}\r\n                </Grid>\r\n                {this.state.dataLoaded &&\r\n                    <Box style={{\r\n                        marginTop: 8,\r\n                        display: 'contents',\r\n                        height: '100vh',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <br />\r\n                        <div style={{ display: 'flex', height: '100%', width: '100%' }}>\r\n                            <div style={{ flexGrow: 1 }}>\r\n                                <MaterialTable\r\n                                    theme={theme()}\r\n                                    title=\"REVV Rewards\"\r\n                                    data={this.state.data}\r\n                                    columns={columns}\r\n                                    icons={tableIcons}\r\n                                    isLoading={this.state.isLoading}\r\n                                    options={{\r\n                                        pageSize: 10,\r\n                                        pageSizeOptions: [5, 10, 20, { value: this.state.data ? parseInt(this.state.data.length) : 0, label: 'All' }],\r\n                                        filtering: true,\r\n                                        search: false,\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.polygonscan.com/api?module=account&action=tokentx&contractaddress=0x70c006878a5a50ed185ac4c87d837633923de296&sort=desc&apikey=NW6MQ4UW5JIEVBH61JW4AK3WY2Q27ZZIM7\"\r\n});"],"sourceRoot":""}