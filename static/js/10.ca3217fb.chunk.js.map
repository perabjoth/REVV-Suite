{"version":3,"sources":["img/Opensea.svg","components/Opensea.js","components/YoutubeSearch.js","components/Home.js"],"names":["Opensea","props","state","preview","loadingIframe","value","this","setState","Accordion","AccordionSummary","expandIcon","id","Avatar","src","OpenseaLogo","Typography","variant","noWrap","component","AccordionDetails","style","display","Grid","container","spacing","item","md","xs","Button","color","fullWidth","onClick","setPreview","target","rel","href","textDecoration","Box","sx","width","align","LinearProgress","height","title","onLoad","setLoadingIframe","frameborder","allowfullscreen","Component","opts","isMobile","playerVars","autoplay","YoutubeSearch","searchYoutube","a","options","q","part","type","order","maxResults","then","response","setVideoComponent","generateVideos","items","setVideosLoaded","catch","e","console","error","videosLoaded","videoComponent","undefined","videoList","index","length","video","push","alignContent","alignItems","videoId","Home"],"mappings":"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","file":"static/js/10.ca3217fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Opensea.203348e1.svg\";","import React, { Component } from 'react'\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport OpenseaLogo from '../img/Opensea.svg'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n\r\nexport default class Opensea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: false,\r\n            loadingIframe: false,\r\n        }\r\n    }\r\n\r\n    setPreview(value) {\r\n        this.setState({ preview: value, loadingIframe: value });\r\n    }\r\n\r\n    setLoadingIframe(value) {\r\n        this.setState({ loadingIframe: value });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Accordion >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMore />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Avatar src={OpenseaLogo} /> <Typography variant=\"h4\" noWrap component=\"div\" >&nbsp;REVV NFT Collection</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails style={{ display: 'block' }}>\r\n                    <Grid container spacing={3} >\r\n                        {!this.state.preview &&\r\n                            <Grid item md={6} xs={6}>\r\n                                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={() => this.setPreview(true)} >Preview Collection</Button>\r\n                            </Grid>\r\n                        }\r\n                        <Grid item md={this.state.preview ? 12 : 6} xs={this.state.preview ? 12 : 6}>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://opensea.io/collection/revv-motorsport-inventory\" style={{textDecoration: 'none'}}>\r\n                                <Button color=\"primary\" fullWidth variant=\"contained\" >View Opensea Collection</Button>\r\n                            </a>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {this.state.loadingIframe &&\r\n                        <Grid container spacing={3} >\r\n                            <Grid item md={12} xs={12}>\r\n                                <Box sx={{ width: '100%' }}>\r\n                                    <Typography variant=\"h4\" noWrap component=\"div\" align='center' >Loading...</Typography>\r\n                                    <LinearProgress color=\"secondary\" fullWidth />\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                    {this.state.preview &&\r\n                        <Grid container spacing={3} >\r\n                            <Grid item md={12} xs={12}>\r\n                                <iframe src='https://opensea.io/collection/revv-motorsport-inventory?embed=true'\r\n                                    width='100%'\r\n                                    height='1000px'\r\n                                    title='opensea'\r\n                                    onLoad={() => this.setLoadingIframe(false)}\r\n                                    frameborder='0'\r\n                                    style={{ display: this.state.loadingIframe ? 'none' : '' }}\r\n                                    allowfullscreen></iframe>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport searchYoutube from 'youtube-api-v3-search';\r\nimport YouTube from 'react-youtube';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst opts = {\r\n    height: isMobile ? '320' : '640',\r\n    width: '100%',\r\n    playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 0,\r\n    },\r\n};\r\n\r\nexport default class YoutubeSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videosLoaded: false,\r\n            videoComponent: undefined\r\n        }\r\n    }\r\n\r\n    setVideosLoaded(value) {\r\n        this.setState({ videosLoaded: value })\r\n    }\r\n\r\n    setVideoComponent(value) {\r\n        this.setState({ videoComponent: value })\r\n    }\r\n\r\n    searchYoutube = async () => {\r\n        const options = {\r\n            q: 'REVV Racing',\r\n            part: 'snippet',\r\n            type: 'video',\r\n            order: 'date',\r\n            maxResults: 10\r\n        }\r\n        await searchYoutube('AIzaSyCVf-RD5wQBDOdROwBT2AozbDcrZHwQdrM', options).then((response => {\r\n            this.setVideoComponent(this.generateVideos(response.items))\r\n            this.setVideosLoaded(true);\r\n        })).catch((e) => {\r\n            console.error(e)\r\n        });;\r\n    }\r\n\r\n    generateVideos(videoList) {\r\n        let videoComponent = []\r\n        for (let index = 0; index < videoList.length; index++) {\r\n            const video = videoList[index];\r\n            videoComponent.push(<Grid container spacing={3} >\r\n                <Grid item md={12} xs={12} alignContent='center' alignItems='center'>\r\n                    <YouTube videoId={video.id.videoId} opts={opts} key={video.id.videoId} />\r\n                </Grid>\r\n            </Grid>)\r\n        }\r\n\r\n        return videoComponent;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchYoutube();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.videosLoaded && this.state.videoComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Opensea from './Opensea'\r\nimport YoutubeSearch from './YoutubeSearch'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <Opensea />\r\n                <br />\r\n                <YoutubeSearch />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}